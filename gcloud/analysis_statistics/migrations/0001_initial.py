# Generated by Django 2.2.24 on 2021-11-01 03:46

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="TaskflowExecutedNodeStatistics",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False, verbose_name="id")),
                ("component_code", models.CharField(db_index=True, max_length=255, verbose_name="组件编码")),
                ("instance_id", models.BigIntegerField(db_index=True, verbose_name="Pipeline实例ID")),
                ("task_instance_id", models.BigIntegerField(db_index=True, verbose_name="Task实例ID")),
                ("node_id", models.CharField(max_length=32, verbose_name="节点ID")),
                ("is_sub", models.BooleanField(default=False, verbose_name="是否子流程引用")),
                ("subprocess_stack", models.TextField(default="[]", help_text="JSON 格式的列表", verbose_name="子流程堆栈")),
                ("started_time", models.DateTimeField(verbose_name="标准插件执行开始时间")),
                ("archived_time", models.DateTimeField(blank=True, null=True, verbose_name="标准插件执行结束时间")),
                ("elapsed_time", models.IntegerField(blank=True, null=True, verbose_name="标准插件执行耗时(s)")),
                ("status", models.BooleanField(default=False, verbose_name="是否执行成功")),
                ("is_skip", models.BooleanField(default=False, verbose_name="是否跳过")),
                ("is_retry", models.BooleanField(default=False, verbose_name="是否重试记录")),
                ("version", models.CharField(default="legacy", max_length=255, verbose_name="插件版本")),
                ("template_id", models.CharField(max_length=32, verbose_name="Pipeline模板ID")),
                ("task_template_id", models.CharField(max_length=32, verbose_name="Task模板ID")),
                (
                    "project_id",
                    models.IntegerField(db_index=True, default=-1, help_text="模板所属project id", verbose_name="项目 ID"),
                ),
                ("instance_create_time", models.DateTimeField(db_index=True, verbose_name="Pipeline实例创建时间")),
                ("instance_start_time", models.DateTimeField(blank=True, null=True, verbose_name="Pipeline实例启动时间")),
                ("instance_finish_time", models.DateTimeField(blank=True, null=True, verbose_name="Pipeline实例结束时间")),
            ],
            options={
                "verbose_name": "Pipeline标准插件执行数据",
                "verbose_name_plural": "Pipeline标准插件执行数据",
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="TaskflowStatistics",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False, verbose_name="id")),
                ("instance_id", models.BigIntegerField(db_index=True, verbose_name="Pipeline实例ID")),
                ("task_instance_id", models.BigIntegerField(db_index=True, verbose_name="Task实例ID")),
                ("atom_total", models.IntegerField(verbose_name="标准插件总数")),
                ("subprocess_total", models.IntegerField(verbose_name="子流程总数")),
                ("gateways_total", models.IntegerField(verbose_name="网关总数")),
                ("project_id", models.IntegerField(default=-1, help_text="模板所属project id", verbose_name="项目 ID")),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("OpsTools", "运维工具"),
                            ("MonitorAlarm", "监控告警"),
                            ("ConfManage", "配置管理"),
                            ("DevTools", "开发工具"),
                            ("EnterpriseIT", "企业IT"),
                            ("OfficeApp", "办公应用"),
                            ("Other", "其它"),
                            ("Default", "默认分类"),
                        ],
                        default="Default",
                        max_length=255,
                        verbose_name="模板类型",
                    ),
                ),
                ("template_id", models.CharField(db_index=True, max_length=255, verbose_name="Pipeline模板ID")),
                ("task_template_id", models.CharField(db_index=True, max_length=255, verbose_name="Task模板ID")),
                ("creator", models.CharField(blank=True, max_length=32, verbose_name="创建者")),
                ("create_time", models.DateTimeField(db_index=True, verbose_name="创建时间")),
                ("start_time", models.DateTimeField(blank=True, null=True, verbose_name="启动时间")),
                ("finish_time", models.DateTimeField(blank=True, null=True, verbose_name="结束时间")),
                ("elapsed_time", models.IntegerField(blank=True, null=True, verbose_name="实例执行耗时(s)")),
                (
                    "create_method",
                    models.CharField(
                        choices=[
                            ("app", "手动"),
                            ("api", "API网关"),
                            ("app_maker", "轻应用"),
                            ("periodic", "周期任务"),
                            ("clocked", "计划任务"),
                            ("mobile", "移动端"),
                        ],
                        default="app",
                        max_length=30,
                        verbose_name="实例创建方式",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pipeline实例引用数据",
                "verbose_name_plural": "Pipeline实例引用数据",
            },
        ),
        migrations.CreateModel(
            name="TemplateNodeStatistics",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False, verbose_name="id")),
                ("component_code", models.CharField(db_index=True, max_length=255, verbose_name="组件编码")),
                ("template_id", models.BigIntegerField(db_index=True, verbose_name="Pipeline模板ID")),
                ("task_template_id", models.BigIntegerField(db_index=True, verbose_name="Task模板ID")),
                (
                    "project_id",
                    models.IntegerField(db_index=True, default=-1, help_text="模板所属project id", verbose_name="项目 ID"),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("OpsTools", "运维工具"),
                            ("MonitorAlarm", "监控告警"),
                            ("ConfManage", "配置管理"),
                            ("DevTools", "开发工具"),
                            ("EnterpriseIT", "企业IT"),
                            ("OfficeApp", "办公应用"),
                            ("Other", "其它"),
                            ("Default", "默认分类"),
                        ],
                        default="Default",
                        max_length=255,
                        verbose_name="模板类型",
                    ),
                ),
                ("node_id", models.CharField(max_length=32, verbose_name="节点ID")),
                ("is_sub", models.BooleanField(default=False, verbose_name="是否子流程引用")),
                ("subprocess_stack", models.TextField(default="[]", help_text="JSON 格式的列表", verbose_name="子流程堆栈")),
                ("version", models.CharField(default="legacy", max_length=255, verbose_name="插件版本")),
                ("template_creator", models.CharField(blank=True, max_length=255, null=True, verbose_name="创建者")),
                ("template_create_time", models.DateTimeField(null=True, verbose_name="模版创建时间")),
                ("template_edit_time", models.DateTimeField(null=True, verbose_name="模板最近编辑时间")),
            ],
            options={
                "verbose_name": "Pipeline标准插件被引用数据",
                "verbose_name_plural": "Pipeline标准插件被引用数据",
            },
        ),
        migrations.CreateModel(
            name="TemplateStatistics",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False, verbose_name="id")),
                ("template_id", models.BigIntegerField(db_index=True, verbose_name="Pipeline模板ID")),
                ("task_template_id", models.BigIntegerField(db_index=True, verbose_name="Task模板ID")),
                ("atom_total", models.IntegerField(verbose_name="标准插件总数")),
                ("subprocess_total", models.IntegerField(verbose_name="子流程总数")),
                ("gateways_total", models.IntegerField(verbose_name="网关总数")),
                (
                    "project_id",
                    models.IntegerField(db_index=True, default=-1, help_text="模板所属project id", verbose_name="项目 ID"),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("OpsTools", "运维工具"),
                            ("MonitorAlarm", "监控告警"),
                            ("ConfManage", "配置管理"),
                            ("DevTools", "开发工具"),
                            ("EnterpriseIT", "企业IT"),
                            ("OfficeApp", "办公应用"),
                            ("Other", "其它"),
                            ("Default", "默认分类"),
                        ],
                        default="Default",
                        max_length=255,
                        verbose_name="模板类型",
                    ),
                ),
                ("template_creator", models.CharField(blank=True, max_length=255, null=True, verbose_name="创建者")),
                ("template_create_time", models.DateTimeField(db_index=True, null=True, verbose_name="创建时间")),
                ("template_edit_time", models.DateTimeField(null=True, verbose_name="最近编辑时间")),
                ("output_count", models.IntegerField(default=-1, verbose_name="输出变量数")),
                ("input_count", models.IntegerField(default=-1, verbose_name="输入变量数")),
            ],
            options={
                "verbose_name": "Pipeline模板引用数据",
                "verbose_name_plural": "Pipeline模板引用数据",
            },
        ),
    ]
