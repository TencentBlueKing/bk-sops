spec_version: 2
app_version: "1.0"
app:
    region: default
    bk_app_code: bk_sops_test
    bk_app_name: 标准运维
    market:
        category: 运维工具
        introduction: 标准运维是通过一套成熟稳定的任务调度引擎，把在多系统间的工作整合到一个流程，助力运维实现跨系统调度自动化的SaaS应用。
        display_options:
            width: 1280
            height: 720
            is_win_maximize: True
            open_mode: "new_tab"
modules:
    default:
        is_default: True
        language: Python
        source_dir: ./src
        services:               
            - name: mysql
            - name: rabbitmq
            - name: redis
        processes:
            web: 
                command: gunicorn wsgi -w 8 -b :$PORT --access-logfile - --error-logfile - --access-logformat '[%(h)s] %({request_id}i)s %(u)s %(t)s "%(r)s" %(s)s %(D)s %(b)s "%(f)s" "%(a)s"' --max-requests=200 --log-level debug --timeout 120
                plan: 4C2G5R
                replicas: 5
            beat:
                command: python manage.py celery beat -l info
                plan: 4C1G5R
                replicas: 1
            dworker:
                command: python manage.py celery worker -Q default -n default@%h -c 6 -l info --maxtasksperchild=50
                plan: 4C2G5R
                replicas: 5
    callback-server:
        is_default: False
        language: Python
        source_dir: ./src
        services:
            - name: mysql
              shared_from: default
            - name: rabbitmq
              shared_from: default
            - name: redis
              shared_from: default
        processes:
            web: 
                command: gunicorn wsgi -w $GUNICORN_WORKER_NUM -b :$PORT --access-logfile - --error-logfile - --access-logformat '[%(h)s] %({request_id}i)s %(u)s %(t)s "%(r)s" %(s)s %(D)s %(b)s "%(f)s" "%(a)s"' --max-requests=100 --log-level debug --timeout 120 -k gevent
                plan: 4C5G5R
                replicas: 5
    pipeline-worker:
        is_default: False
        language: Python
        source_dir: ./src
        services:
            - name: mysql
              shared_from: default
            - name: rabbitmq
              shared_from: default
            - name: redis
              shared_from: default
        processes:
            api-er-e:
                command: celery worker -A blueapps.core.celery -P gevent -Q er_execute_api -n api_er_e_worker@%h -c 100 -l info
                plan: 4C1G5R
                replicas: 2
            api-er-s:
                command: celery worker -A blueapps.core.celery -P gevent -Q er_schedule_api -n api_er_s_worker@%h -c 100 -l info
                plan: 4C1G5R
                replicas: 2
            api-pworker:
                command: celery worker -A blueapps.core.celery -P gevent -Q api_task_queue_pipeline_priority -n api_task_schedule_worker@%h -c 100 -l info --maxtasksperchild=50
                plan: 4C1G5R
                replicas: 5
            api-sworker:
                command: celery worker -A blueapps.core.celery -P gevent -Q api_task_queue_service_schedule_priority -n api_task_schedule_worker@%h -c 100 -l info --maxtasksperchild=50
                plan: 4C1G5R
                replicas: 5
            api-task:
                command: celery worker -A blueapps.core.celery -P gevent -Q task_prepare_api -n api_task_worker@%h -c 50 -l info
                plan: 4C1G5R
                replicas: 2
            cworker: 
                command: python manage.py celery worker -Q pipeline_additional_task,pipeline_additional_task_priority -n common_worker@%h -c 6 -l info --maxtasksperchild=50
                plan: 4C1G5R
                replicas: 3
            er-e:
                command: celery worker -A blueapps.core.celery -P gevent -Q er_execute -n er_e_worker@%h -c 100 -l info
                plan: 4C1G5R
                replicas: 2
            er-s:
                command: celery worker -A blueapps.core.celery -P gevent -Q er_schedule -n er_s_worker@%h -c 100 -l info
                plan: 4C1G5R
                replicas: 2
            peri-er-e:
                command: celery worker -A blueapps.core.celery -P gevent -Q er_execute_periodic_task -n peri_er_e_worker@%h -c 100 -l info
                plan: 4C1G5R
                replicas: 2
            peri-er-s:
                command: celery worker -A blueapps.core.celery -P gevent -Q er_schedule_periodic_task -n peri_er_s_worker@%h -c 100 -l info
                plan: 4C1G5R
                replicas: 2
            peri-pworker:
                command: python manage.py celery worker -Q periodic_task_queue_pipeline_priority -n periodic_task_pipeline_worker@%h -c 5 -l info --maxtasksperchild=50
                plan: 4C2G5R
                replicas: 2
            peri-sworker:
                command: celery worker -A blueapps.core.celery -P gevent -Q periodic_task_queue_service_schedule_priority -n periodic_task_schedule_worker@%h -c 100 -l info --maxtasksperchild=50
                plan: 4C1G5R
                replicas: 2
            pworker:
                command: python manage.py celery worker -Q pipeline,pipeline_priority -n pipeline_worker@%h -c 5 -l info --maxtasksperchild=50
                plan: 4C2G5R
                replicas: 3
            stats-worker:
                command: celery worker -A blueapps.core.celery -P gevent -Q pipeline_statistics_priority -n default@%h -c 100 -l info --maxtasksperchild=50
                plan: 4C1G5R
                replicas: 1
            sworker:
                command: celery worker -A blueapps.core.celery -P gevent -Q service_schedule,service_schedule_priority -c 100 -l info -n schedule_worker@%h --maxtasksperchild=50
                plan: 4C2G5R
                replicas: 3
            web:
                command: celery-prometheus-exporter --broker amqp://$RABBITMQ_USER:$RABBITMQ_PASSWORD@$RABBITMQ_HOST:$RABBITMQ_PORT/$RABBITMQ_VHOST --addr :$PORT --queue-list $CELERY_EXPORTER_QUEUE
                plan: 4C2G5R
                replicas: 1
    api-server:
        is_default: False
        language: Python
        source_dir: ./src
        services:
            - name: mysql
              shared_from: default
            - name: rabbitmq
              shared_from: default
            - name: redis
              shared_from: default
        processes:
            web: 
                command: gunicorn wsgi -w $GUNICORN_WORKER_NUM -b :$PORT --access-logfile - --error-logfile - --access-logformat '[%(h)s] %({request_id}i)s %(u)s %(t)s "%(r)s" %(s)s %(D)s %(b)s "%(f)s" "%(a)s"' --max-requests=100 --log-level debug --timeout 120 -k gevent
                plan: 4C2G5R
                replicas: 5
